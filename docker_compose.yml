version: '3'
services:
  telegraf:
    image: telegraf:latest
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
    ports:
      - "8092:8092/udp"
      - "8094:8094"
      - "8125:8125/udp"
      # prometheus-client is configured to expose the metrics on localhost:9273 
      - "9273:9273"
      # Graphite input
      - "2013:2013"

  # Graphite Exporter (For Prom scraping)
  # https://github.com/prometheus/graphite_exporter
  # Sample message: `echo "Clusters.c891.node74.some_service.p4 123.52 $(date +%s)" | nc localhost 9109`
  graphite-exporter:
    image: prom/graphite-exporter:latest
    command: [--graphite.mapping-config=/tmp/graphite_mapping.conf]
    ports:
      - "9108:9108" # Port for Prom scraping
      - "9109:9109"
      - "9109:9109/udp"
    volumes:
      - ./graphite_mapping.conf:/tmp/graphite_mapping.conf

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-remote-write-receiver'
      - '--storage.tsdb.retention.time=6h'
      - '--log.level=debug'

  # Not in use
  pushgateway:
    image: prom/pushgateway
    ports:
      - "9091:9091"

  otel-collector:
    # The "raw" image that has only "core" features (https://github.com/open-telemetry/opentelemetry-collector)
    #image: otel/opentelemetry-collector
    # The "contrib" image has all the custom receivers/exporters present (https://github.com/open-telemetry/opentelemetry-collector-contrib)
    # image: otel/opentelemetry-collector-contrib:0.79.0
    # image: otel/opentelemetry-collector-contrib:0.58.0

    # OTEL image from Docker Hub
    # image: otel/opentelemetry-collector-contrib
    # Locally build OTel image (with fixes)
    image: otelcontribcol
    # Disabling feature flags to avoid some translations (eg: Counter metric receiving the _total suffix)
    # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/pkg/translator/prometheus#full-normalization
    # https://signoz.io/docs/operate/feature-flags/
    command: ["--config=/etc/otel-collector-config.yaml", "--feature-gates=-pkg.translator.prometheus.NormalizeName"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
      - ./foo:/tmp/foo
    ports:
      - "19000:19000" # Influx receiver
      - "2003:2003" # Carbon/Graphite receiver
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus' metrics exposed by the collector itself
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver
      - "55679:55679" # zpages extension


  influxdb:
    image: influxdb:1.8-alpine
    platform: linux/amd64
    container_name: influxdb
    restart: always
    environment:
      - INFLUXDB_DB=influx
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
    ports:
      - '8086:8086'

  grafana:
    image: grafana/grafana
    platform: linux/arm64/v8
    container_name: grafana-server
    restart: always
    depends_on:
      - influxdb
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=
    links:
      - influxdb
    ports:
      - '3000:3000'
