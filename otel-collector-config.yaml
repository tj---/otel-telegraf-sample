receivers:
 # Influx receiver (tcp)
 influxdb:
   # https://pkg.go.dev/github.com/open-telemetry/opentelemetry-collector-contrib/receiver/influxdbreceiver#section-readme
   # Apparently, only HTTP service endpoint for the line protocol receiver 
   endpoint: 0.0.0.0:19000

 # OTLP receiver
 otlp:
   protocols:
     http:
       endpoint: 0.0.0.0:4318
     grpc:
       endpoint: 0.0.0.0:4317

processors:
 batch:
   timeout: 1s
 resource:
   attributes:
     # Dummy processor - Just adds a key/value pair to each metric flowing through
     - key: test.key
       value: "test-value"
       action: insert

exporters:
 # Multiple Exporters of the same "type" are possible, they have to be named <type>/<unique-name>
 file/file-A:
    path: /dev/stdout
 file/file-B:
    path: /dev/stdout
 logging:
   loglevel: debug
 # This enables a scraping endpoint for Prometheus
 prometheus:
   endpoint: 0.0.0.0:8889
   namespace: default

extensions:
 health_check:
 pprof:
   endpoint: :1888
 zpages:
   endpoint: :55679

service:
 extensions: [pprof, zpages, health_check]
 pipelines:
   metrics:
     receivers: [influxdb, otlp]
     processors: [batch, resource]
     exporters: [file/file-A, file/file-B, logging, prometheus]
